<?php

namespace IMSGlobal\LTI\Tests\unit;

use IMSGlobal\LTI\LTI_Registration;

class LTI_Registration_Test extends TestBase
{
    public function testNewInstance()
    {
        $this->assertInstanceOf('IMSGlobal\LTI\LTI_Registration', LTI_Registration::newInstance());
    }

    public function testSetGetKid()
    {
        $kid = uniqid();
        $registration = LTI_Registration::newInstance()->set_kid($kid);
        $this->assertInstanceOf('IMSGlobal\LTI\LTI_Registration', $registration);
        $this->assertEquals($kid, $registration->get_kid());
    }

    public function testAutoGeneratedKid()
    {
        $issuer = uniqid();
        $clientId = uniqid();
        $registration = LTI_Registration::newInstance()->set_issuer($issuer)->set_client_id($clientId);
        $expectedKid = hash('sha256', trim($issuer . $clientId));
        $this->assertEquals($expectedKid, $registration->get_kid());
    }

    public function testGetKidWithoutSettingExpectedValues()
    {
        $issuer = uniqid();
        $registration = LTI_Registration::newInstance()->set_issuer($issuer);
        $this->setExpectedException(
            '\UnexpectedValueException',
            'kid or issuer and client_id must be set'
        );
        $registration->get_kid();
    }

    public function testFail()
    {
        $this->fail('Just a failure');
    }
}
